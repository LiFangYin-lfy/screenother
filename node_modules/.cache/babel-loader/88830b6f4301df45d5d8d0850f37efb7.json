{"remainingRequest":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\src\\utils\\http.js","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\src\\utils\\http.js","mtime":1619765069711},{"path":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8v5bCB6KOFYXhpb3MKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy9pbXBvcnQgcXMgZnJvbSAncXVlcnlzdHJpbmcnCi8v6ZSZ6K+v5L+h5oGv5aSE55CGCgp2YXIgZXJyb3JIYW5kbGUgPSBmdW5jdGlvbiBlcnJvckhhbmRsZShzdGF0dXMsIG90aGVyKSB7CiAgc3dpdGNoIChzdGF0dXMpIHsKICAgIGNhc2UgNDAwOgogICAgICBjb25zb2xlLmxvZygi5L+h5oGv5qCh6aqM5aSx6LSlIik7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgNDAxOgogICAgICBjb25zb2xlLmxvZygi6K6k6K+B5aSx6LSlIik7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgNDAzOgogICAgICBjb25zb2xlLmxvZygidG9rZW7moKHpqozlpLHotKUiKTsKICAgICAgYnJlYWs7CgogICAgY2FzZSA0MDQ6CiAgICAgIGNvbnNvbGUubG9nKCLor7fmsYLotYTmupDkuI3lrZjlnKgiKTsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgY29uc29sZS5sb2cob3RoZXIpOwogICAgICBicmVhazsKICB9Cn07IC8v5Yib5bu6YXhpb3Plrp7kvosKCgp2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogIHRpbWVvdXQ6IDUwMDAwMAp9KTsgLy8gaW5zdGFuY2UuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnOwovLyAvL2luc3RhbmNlLmRlZmF1bHRzLmhlYWRlcnMucG9zdFsnQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7Ci8vIC8vaW5zdGFuY2UuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ0F1dGhvcml6YXRpb24nXSA9ICJBVVRIX1RPS0VOIjsKLy8gaW5zdGFuY2UuZGVmYXVsdHMuYmFzZVVSTCA9ICcxMjEuMC4wLjE6ODA4MS9hJzsKLy8g5re75Yqg6K+35rGC5oum5oiq5ZmoCgppbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIOWcqOWPkemAgeivt+axguS5i+WJjeWBmuS6m+S7gOS5iAogIC8v5Yik5patcG9zdOivt+axgumcgOimgeWinuWKoHFz6L2s5YyWCiAgaWYgKGNvbmZpZy5tZXRob2QgPT09ICJwb3N0IikgewogICAgLy9jb25maWcuZGF0YSA9IHFzLnN0cmluZ2lmeShjb25maWcuZGF0YSkKICAgIGNvbmZpZy5kYXRhID0gSlNPTi5zdHJpbmdpZnkoY29uZmlnLmRhdGEpOwogIH0gLy8gaWYodG9rZW4pewogIC8vICAgICBjb25maWcuaGVhZGVycy5BdXRob3JpemF0aW9uID0gdG9rZW4KICAvLyB9CgoKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAvLyDlr7nor7fmsYLplJnor6/lgZrkupvku4DkuYgKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsgLy8g5re75Yqg5ZON5bqU5oum5oiq5ZmoCgppbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKCAvL+ivt+axguaIkOWKnwpmdW5jdGlvbiAocmVzKSB7CiAgcmV0dXJuIHJlcy5zdGF0dXMgPT09IDIwMCA/IFByb21pc2UucmVzb2x2ZShyZXMpIDogUHJvbWlzZS5yZWplY3QocmVzKTsKfSwgLy/or7fmsYLlpLHotKUKZnVuY3Rpb24gKGVycm9yKSB7CiAgdmFyIHJlc3BvbnNlID0gZXJyb3IucmVzcG9uc2U7CgogIGlmIChyZXNwb25zZSkgewogICAgZXJyb3JIYW5kbGUocmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS5kYXRhLm1lc3NhZ2UpOwogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlc3BvbnNlKTsKICB9IGVsc2UgewogICAgY29uc29sZS5sb2coIuaWree9keS6hiIpOwogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlOw=="},{"version":3,"sources":["C:/Users/PC/Desktop/新建文件夹 (2)/putianpage/src/utils/http.js"],"names":["axios","errorHandle","status","other","console","log","instance","create","timeout","interceptors","request","use","config","method","data","JSON","stringify","error","Promise","reject","response","res","resolve","message"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAUC,KAAV,EAAoB;AACpC,UAAOD,MAAP;AACI,SAAK,GAAL;AACIE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;;AACJ,SAAK,GAAL;AACID,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;;AACJ,SAAK,GAAL;AACID,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA;;AACJ,SAAK,GAAL;AACID,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA;;AACJ;AACID,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AAfR;AAiBH,CAlBD,C,CAoBA;;;AACA,IAAIG,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAG;AAAZ,CAAb,CAAf,C,CACA;AACA;AACA;AACA;AAEA;;AACAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChD;AACA;AACA,MAAGA,MAAM,CAACC,MAAP,KAAkB,MAArB,EAA4B;AACxB;AACAD,IAAAA,MAAM,CAACE,IAAP,GAAcC,IAAI,CAACC,SAAL,CAAeJ,MAAM,CAACE,IAAtB,CAAd;AACH,GAN+C,CAQhD;AACA;AACA;;;AACA,SAAOF,MAAP;AACH,CAZD,EAYG,UAAUK,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAfD,E,CAiBA;;AACAX,QAAQ,CAACG,YAAT,CAAsBW,QAAtB,CAA+BT,GAA/B,EACI;AACA,UAAAU,GAAG;AAAA,SAAIA,GAAG,CAACnB,MAAJ,KAAe,GAAf,GAAqBgB,OAAO,CAACI,OAAR,CAAgBD,GAAhB,CAArB,GAA4CH,OAAO,CAACC,MAAR,CAAeE,GAAf,CAAhD;AAAA,CAFP,EAGI;AACA,UAAAJ,KAAK,EAAI;AAAA,MACGG,QADH,GACgBH,KADhB,CACGG,QADH;;AAEL,MAAGA,QAAH,EAAY;AACRnB,IAAAA,WAAW,CAACmB,QAAQ,CAAClB,MAAV,EAAiBkB,QAAQ,CAACN,IAAT,CAAcS,OAA/B,CAAX;AACA,WAAOL,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAP;AACH,GAHD,MAGK;AACDhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AACJ,CAZL;AAeA,eAAeC,QAAf","sourcesContent":["//封装axios\r\nimport axios from 'axios';\r\n//import qs from 'querystring'\r\n\r\n//错误信息处理\r\nconst errorHandle = (status , other) => {\r\n    switch(status){\r\n        case 400:\r\n            console.log(\"信息校验失败\")\r\n            break;\r\n        case 401:\r\n            console.log(\"认证失败\")\r\n            break;\r\n        case 403:\r\n            console.log(\"token校验失败\")\r\n            break;\r\n        case 404:\r\n            console.log(\"请求资源不存在\")\r\n            break;\r\n        default:\r\n            console.log(other)\r\n            break;\r\n    }\r\n}\r\n\r\n//创建axios实例\r\nvar instance = axios.create({ timeout : 500000 })\r\n// instance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n// //instance.defaults.headers.post['Content-Type'] = 'application/json';\r\n// //instance.defaults.headers.common['Authorization'] = \"AUTH_TOKEN\";\r\n// instance.defaults.baseURL = '121.0.0.1:8081/a';\r\n\r\n// 添加请求拦截器\r\ninstance.interceptors.request.use(function (config) {\r\n    // 在发送请求之前做些什么\r\n    //判断post请求需要增加qs转化\r\n    if(config.method === \"post\"){\r\n        //config.data = qs.stringify(config.data)\r\n        config.data = JSON.stringify(config.data)\r\n    }\r\n\r\n    // if(token){\r\n    //     config.headers.Authorization = token\r\n    // }\r\n    return config;\r\n}, function (error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 添加响应拦截器\r\ninstance.interceptors.response.use(\r\n    //请求成功\r\n    res => res.status === 200 ? Promise.resolve(res) : Promise.reject(res),\r\n    //请求失败\r\n    error => {\r\n        const { response } = error\r\n        if(response){\r\n            errorHandle(response.status,response.data.message)\r\n            return Promise.reject(response)\r\n        }else{\r\n            console.log(\"断网了\")\r\n        }\r\n    }\r\n);\r\n\r\nexport default instance"]}]}