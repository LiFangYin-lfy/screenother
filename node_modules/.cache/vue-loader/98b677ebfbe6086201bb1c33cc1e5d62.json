{"remainingRequest":"E:\\pro\\putianpage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\pro\\putianpage\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"E:\\pro\\putianpage\\src\\views\\Home.vue","mtime":1625534513453},{"path":"E:\\pro\\putianpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\pro\\putianpage\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\pro\\putianpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\pro\\putianpage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}