{"remainingRequest":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\src\\views\\Mzwh.vue?vue&type=template&id=3ddb6d10&scoped=true&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\src\\views\\Mzwh.vue","mtime":1619425786274},{"path":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Desktop\\新建文件夹 (2)\\putianpage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}